<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.test.mapper.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.example.test.entity.Department" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="DeptName" property="deptname" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="departmentInfo" type="com.example.test.entity.Department" extends="BaseResultMap">
<!--    <constructor>-->
<!--      <idArg column="id" name="id"  jdbcType="BIGINT" />-->
<!--    </constructor>-->
<!--    <id column="id" property="id" jdbcType="BIGINT" />-->
<!--    <result column="DeptName" property="deptname" jdbcType="VARCHAR" />-->
    <collection property="employees" ofType="com.example.test.entity.Employee">
      <id column="eid" property="id" jdbcType="BIGINT"/>
      <result column="EmpNo" property="empno" jdbcType="VARCHAR" />
      <result column="ename" property="name" jdbcType="VARCHAR" />
      <result column="Birthday" property="birthday" jdbcType="TIMESTAMP" />
      <result column="Status" property="status" jdbcType="INTEGER" />
      <result column="DepartmentID" property="departmentid" jdbcType="BIGINT" />
      <result column="score" property="score" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, DeptName
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.test.entity.DepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from department
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.test.entity.DepartmentExample" >
    delete from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.test.entity.Department" >
    insert into department (id, DeptName)
    values (#{id,jdbcType=BIGINT}, #{deptname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.test.entity.Department" >
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="deptname != null" >
        DeptName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="deptname != null" >
        #{deptname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.test.entity.DepartmentExample" resultType="java.lang.Integer" >
    select count(*) from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update department
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.deptname != null" >
        DeptName = #{record.deptname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update department
    set id = #{record.id,jdbcType=BIGINT},
      DeptName = #{record.deptname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.test.entity.Department" >
    update department
    <set >
      <if test="deptname != null" >
        DeptName = #{deptname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.test.entity.Department" >
    update department
    set DeptName = #{deptname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getDepartmentInfo" parameterType="java.lang.Long" resultMap="departmentInfo">
    SELECT
      d.*,
      e.id AS eid,
      e.EmpNo,
      e.Name AS ename,
      e.Birthday,
      e.Status,
      e.DepartmentID,
      e.score
  FROM
      department d,
      employee e
  WHERE
      d.id = e.DepartmentID
      AND d.id = #{id,jdbcType=BIGINT}
  </select>
</mapper>